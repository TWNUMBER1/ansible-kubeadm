Using /Users/hsutsungchun/ansible-kubeadm/ansible.cfg as config file

PLAY [all] ************************************************************************************************************************************

TASK [Gathering Facts] ************************************************************************************************************************
ok: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com]
ok: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com]

TASK [reset : Reset cluster] ******************************************************************************************************************
changed: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com] => {"changed": true, "cmd": "/usr/bin/kubeadm reset", "delta": "0:00:00.309044", "end": "2017-09-03 17:19:29.448445", "rc": 0, "start": "2017-09-03 17:19:29.139401", "stderr": "", "stderr_lines": [], "stdout": "[preflight] Running pre-flight checks\n[reset] Stopping the kubelet service\n[reset] Unmounting mounted directories in \"/var/lib/kubelet\"\n[reset] Removing kubernetes-managed containers\n[reset] No etcd manifest found in \"/etc/kubernetes/manifests/etcd.yaml\", assuming external etcd.\n[reset] Deleting contents of stateful directories: [/var/lib/kubelet /etc/cni/net.d /var/lib/dockershim]\n[reset] Deleting contents of config directories: [/etc/kubernetes/manifests /etc/kubernetes/pki]\n[reset] Deleting files: [/etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf]", "stdout_lines": ["[preflight] Running pre-flight checks", "[reset] Stopping the kubelet service", "[reset] Unmounting mounted directories in \"/var/lib/kubelet\"", "[reset] Removing kubernetes-managed containers", "[reset] No etcd manifest found in \"/etc/kubernetes/manifests/etcd.yaml\", assuming external etcd.", "[reset] Deleting contents of stateful directories: [/var/lib/kubelet /etc/cni/net.d /var/lib/dockershim]", "[reset] Deleting contents of config directories: [/etc/kubernetes/manifests /etc/kubernetes/pki]", "[reset] Deleting files: [/etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf]"]}
changed: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => {"changed": true, "cmd": "/usr/bin/kubeadm reset", "delta": "0:00:01.274808", "end": "2017-09-03 17:19:30.388685", "rc": 0, "start": "2017-09-03 17:19:29.113877", "stderr": "", "stderr_lines": [], "stdout": "[preflight] Running pre-flight checks\n[reset] Stopping the kubelet service\n[reset] Unmounting mounted directories in \"/var/lib/kubelet\"\n[reset] Removing kubernetes-managed containers\n[reset] Deleting contents of stateful directories: [/var/lib/kubelet /etc/cni/net.d /var/lib/dockershim /var/lib/etcd]\n[reset] Deleting contents of config directories: [/etc/kubernetes/manifests /etc/kubernetes/pki]\n[reset] Deleting files: [/etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf]", "stdout_lines": ["[preflight] Running pre-flight checks", "[reset] Stopping the kubelet service", "[reset] Unmounting mounted directories in \"/var/lib/kubelet\"", "[reset] Removing kubernetes-managed containers", "[reset] Deleting contents of stateful directories: [/var/lib/kubelet /etc/cni/net.d /var/lib/dockershim /var/lib/etcd]", "[reset] Deleting contents of config directories: [/etc/kubernetes/manifests /etc/kubernetes/pki]", "[reset] Deleting files: [/etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf]"]}

TASK [reset : systemctl stop kubelet] *********************************************************************************************************
changed: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => {"changed": true, "cmd": "for i in $(/usr/bin/systemctl list-unit-files --no-legend --no-pager -l | grep --color=never -o *.*.slice | grep kubepod); do echo $i; systemctl stop $i; done", "delta": "0:00:00.004067", "end": "2017-09-03 17:19:31.513786", "rc": 0, "start": "2017-09-03 17:19:31.509719", "stderr": "/bin/sh: 1: /usr/bin/systemctl: not found", "stderr_lines": ["/bin/sh: 1: /usr/bin/systemctl: not found"], "stdout": "", "stdout_lines": []}
changed: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com] => {"changed": true, "cmd": "for i in $(/usr/bin/systemctl list-unit-files --no-legend --no-pager -l | grep --color=never -o *.*.slice | grep kubepod); do echo $i; systemctl stop $i; done", "delta": "0:00:00.003568", "end": "2017-09-03 17:19:31.538183", "rc": 0, "start": "2017-09-03 17:19:31.534615", "stderr": "/bin/sh: 1: /usr/bin/systemctl: not found", "stderr_lines": ["/bin/sh: 1: /usr/bin/systemctl: not found"], "stdout": "", "stdout_lines": []}

TASK [reset : remove pacakges] ****************************************************************************************************************
changed: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com] => (item=kubelet) => {"changed": true, "item": "kubelet", "stderr": "", "stderr_lines": [], "stdout": "Reading package lists...\nBuilding dependency tree...\nReading state information...\nThe following packages were automatically installed and are no longer required:\n  ebtables socat\nUse 'sudo apt autoremove' to remove them.\nThe following packages will be REMOVED:\n  kubeadm kubelet\n0 upgraded, 0 newly installed, 2 to remove and 9 not upgraded.\nAfter this operation, 218 MB disk space will be freed.\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 76368 files and directories currently installed.)\r\nRemoving kubeadm (1.7.5-00) ...\r\nRemoving kubelet (1.7.5-00) ...\r\n", "stdout_lines": ["Reading package lists...", "Building dependency tree...", "Reading state information...", "The following packages were automatically installed and are no longer required:", "  ebtables socat", "Use 'sudo apt autoremove' to remove them.", "The following packages will be REMOVED:", "  kubeadm kubelet", "0 upgraded, 0 newly installed, 2 to remove and 9 not upgraded.", "After this operation, 218 MB disk space will be freed.", "(Reading database ... ", "(Reading database ... 5%", "(Reading database ... 10%", "(Reading database ... 15%", "(Reading database ... 20%", "(Reading database ... 25%", "(Reading database ... 30%", "(Reading database ... 35%", "(Reading database ... 40%", "(Reading database ... 45%", "(Reading database ... 50%", "(Reading database ... 55%", "(Reading database ... 60%", "(Reading database ... 65%", "(Reading database ... 70%", "(Reading database ... 75%", "(Reading database ... 80%", "(Reading database ... 85%", "(Reading database ... 90%", "(Reading database ... 95%", "(Reading database ... 100%", "(Reading database ... 76368 files and directories currently installed.)", "Removing kubeadm (1.7.5-00) ...", "Removing kubelet (1.7.5-00) ..."]}
changed: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => (item=kubelet) => {"changed": true, "item": "kubelet", "stderr": "", "stderr_lines": [], "stdout": "Reading package lists...\nBuilding dependency tree...\nReading state information...\nThe following packages were automatically installed and are no longer required:\n  ebtables socat\nUse 'sudo apt autoremove' to remove them.\nThe following packages will be REMOVED:\n  kubeadm kubelet\n0 upgraded, 0 newly installed, 2 to remove and 34 not upgraded.\nAfter this operation, 218 MB disk space will be freed.\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 52034 files and directories currently installed.)\r\nRemoving kubeadm (1.7.5-00) ...\r\nRemoving kubelet (1.7.5-00) ...\r\n", "stdout_lines": ["Reading package lists...", "Building dependency tree...", "Reading state information...", "The following packages were automatically installed and are no longer required:", "  ebtables socat", "Use 'sudo apt autoremove' to remove them.", "The following packages will be REMOVED:", "  kubeadm kubelet", "0 upgraded, 0 newly installed, 2 to remove and 34 not upgraded.", "After this operation, 218 MB disk space will be freed.", "(Reading database ... ", "(Reading database ... 5%", "(Reading database ... 10%", "(Reading database ... 15%", "(Reading database ... 20%", "(Reading database ... 25%", "(Reading database ... 30%", "(Reading database ... 35%", "(Reading database ... 40%", "(Reading database ... 45%", "(Reading database ... 50%", "(Reading database ... 55%", "(Reading database ... 60%", "(Reading database ... 65%", "(Reading database ... 70%", "(Reading database ... 75%", "(Reading database ... 80%", "(Reading database ... 85%", "(Reading database ... 90%", "(Reading database ... 95%", "(Reading database ... 100%", "(Reading database ... 52034 files and directories currently installed.)", "Removing kubeadm (1.7.5-00) ...", "Removing kubelet (1.7.5-00) ..."]}
changed: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com] => (item=kubectl) => {"changed": true, "item": "kubectl", "stderr": "", "stderr_lines": [], "stdout": "Reading package lists...\nBuilding dependency tree...\nReading state information...\nThe following packages were automatically installed and are no longer required:\n  ebtables socat\nUse 'sudo apt autoremove' to remove them.\nThe following packages will be REMOVED:\n  kubectl\n0 upgraded, 0 newly installed, 1 to remove and 9 not upgraded.\nAfter this operation, 72.4 MB disk space will be freed.\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 76365 files and directories currently installed.)\r\nRemoving kubectl (1.7.5-00) ...\r\n", "stdout_lines": ["Reading package lists...", "Building dependency tree...", "Reading state information...", "The following packages were automatically installed and are no longer required:", "  ebtables socat", "Use 'sudo apt autoremove' to remove them.", "The following packages will be REMOVED:", "  kubectl", "0 upgraded, 0 newly installed, 1 to remove and 9 not upgraded.", "After this operation, 72.4 MB disk space will be freed.", "(Reading database ... ", "(Reading database ... 5%", "(Reading database ... 10%", "(Reading database ... 15%", "(Reading database ... 20%", "(Reading database ... 25%", "(Reading database ... 30%", "(Reading database ... 35%", "(Reading database ... 40%", "(Reading database ... 45%", "(Reading database ... 50%", "(Reading database ... 55%", "(Reading database ... 60%", "(Reading database ... 65%", "(Reading database ... 70%", "(Reading database ... 75%", "(Reading database ... 80%", "(Reading database ... 85%", "(Reading database ... 90%", "(Reading database ... 95%", "(Reading database ... 100%", "(Reading database ... 76365 files and directories currently installed.)", "Removing kubectl (1.7.5-00) ..."]}
changed: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => (item=kubectl) => {"changed": true, "item": "kubectl", "stderr": "", "stderr_lines": [], "stdout": "Reading package lists...\nBuilding dependency tree...\nReading state information...\nThe following packages were automatically installed and are no longer required:\n  ebtables socat\nUse 'sudo apt autoremove' to remove them.\nThe following packages will be REMOVED:\n  kubectl\n0 upgraded, 0 newly installed, 1 to remove and 34 not upgraded.\nAfter this operation, 72.4 MB disk space will be freed.\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 52031 files and directories currently installed.)\r\nRemoving kubectl (1.7.5-00) ...\r\n", "stdout_lines": ["Reading package lists...", "Building dependency tree...", "Reading state information...", "The following packages were automatically installed and are no longer required:", "  ebtables socat", "Use 'sudo apt autoremove' to remove them.", "The following packages will be REMOVED:", "  kubectl", "0 upgraded, 0 newly installed, 1 to remove and 34 not upgraded.", "After this operation, 72.4 MB disk space will be freed.", "(Reading database ... ", "(Reading database ... 5%", "(Reading database ... 10%", "(Reading database ... 15%", "(Reading database ... 20%", "(Reading database ... 25%", "(Reading database ... 30%", "(Reading database ... 35%", "(Reading database ... 40%", "(Reading database ... 45%", "(Reading database ... 50%", "(Reading database ... 55%", "(Reading database ... 60%", "(Reading database ... 65%", "(Reading database ... 70%", "(Reading database ... 75%", "(Reading database ... 80%", "(Reading database ... 85%", "(Reading database ... 90%", "(Reading database ... 95%", "(Reading database ... 100%", "(Reading database ... 52031 files and directories currently installed.)", "Removing kubectl (1.7.5-00) ..."]}
ok: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com] => (item=kubeadm) => {"changed": false, "item": "kubeadm"}
ok: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => (item=kubeadm) => {"changed": false, "item": "kubeadm"}
changed: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com] => (item=kubernetes-cni) => {"changed": true, "item": "kubernetes-cni", "stderr": "", "stderr_lines": [], "stdout": "Reading package lists...\nBuilding dependency tree...\nReading state information...\nThe following packages were automatically installed and are no longer required:\n  ebtables socat\nUse 'sudo apt autoremove' to remove them.\nThe following packages will be REMOVED:\n  kubernetes-cni\n0 upgraded, 0 newly installed, 1 to remove and 9 not upgraded.\nAfter this operation, 42.7 MB disk space will be freed.\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 76364 files and directories currently installed.)\r\nRemoving kubernetes-cni (0.5.1-00) ...\r\n", "stdout_lines": ["Reading package lists...", "Building dependency tree...", "Reading state information...", "The following packages were automatically installed and are no longer required:", "  ebtables socat", "Use 'sudo apt autoremove' to remove them.", "The following packages will be REMOVED:", "  kubernetes-cni", "0 upgraded, 0 newly installed, 1 to remove and 9 not upgraded.", "After this operation, 42.7 MB disk space will be freed.", "(Reading database ... ", "(Reading database ... 5%", "(Reading database ... 10%", "(Reading database ... 15%", "(Reading database ... 20%", "(Reading database ... 25%", "(Reading database ... 30%", "(Reading database ... 35%", "(Reading database ... 40%", "(Reading database ... 45%", "(Reading database ... 50%", "(Reading database ... 55%", "(Reading database ... 60%", "(Reading database ... 65%", "(Reading database ... 70%", "(Reading database ... 75%", "(Reading database ... 80%", "(Reading database ... 85%", "(Reading database ... 90%", "(Reading database ... 95%", "(Reading database ... 100%", "(Reading database ... 76364 files and directories currently installed.)", "Removing kubernetes-cni (0.5.1-00) ..."]}
changed: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => (item=kubernetes-cni) => {"changed": true, "item": "kubernetes-cni", "stderr": "", "stderr_lines": [], "stdout": "Reading package lists...\nBuilding dependency tree...\nReading state information...\nThe following packages were automatically installed and are no longer required:\n  ebtables socat\nUse 'sudo apt autoremove' to remove them.\nThe following packages will be REMOVED:\n  kubernetes-cni\n0 upgraded, 0 newly installed, 1 to remove and 34 not upgraded.\nAfter this operation, 42.7 MB disk space will be freed.\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 52030 files and directories currently installed.)\r\nRemoving kubernetes-cni (0.5.1-00) ...\r\n", "stdout_lines": ["Reading package lists...", "Building dependency tree...", "Reading state information...", "The following packages were automatically installed and are no longer required:", "  ebtables socat", "Use 'sudo apt autoremove' to remove them.", "The following packages will be REMOVED:", "  kubernetes-cni", "0 upgraded, 0 newly installed, 1 to remove and 34 not upgraded.", "After this operation, 42.7 MB disk space will be freed.", "(Reading database ... ", "(Reading database ... 5%", "(Reading database ... 10%", "(Reading database ... 15%", "(Reading database ... 20%", "(Reading database ... 25%", "(Reading database ... 30%", "(Reading database ... 35%", "(Reading database ... 40%", "(Reading database ... 45%", "(Reading database ... 50%", "(Reading database ... 55%", "(Reading database ... 60%", "(Reading database ... 65%", "(Reading database ... 70%", "(Reading database ... 75%", "(Reading database ... 80%", "(Reading database ... 85%", "(Reading database ... 90%", "(Reading database ... 95%", "(Reading database ... 100%", "(Reading database ... 52030 files and directories currently installed.)", "Removing kubernetes-cni (0.5.1-00) ..."]}

TASK [reset : cni0 IP allocation issue] *******************************************************************************************************
 [WARNING]: Consider using file module with state=absent rather than running rm
changed: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com] => {"changed": true, "cmd": "rm -rf /var/lib/cni/ /var/lib/kubelet/* /etc/cni/ /run/flannel ; ifconfig cni0 down; ifconfig flannel.1 down;", "delta": "0:00:00.005023", "end": "2017-09-03 17:19:43.216963", "rc": 0, "start": "2017-09-03 17:19:43.211940", "stderr": "cni0: ERROR while getting interface flags: No such device", "stderr_lines": ["cni0: ERROR while getting interface flags: No such device"], "stdout": "", "stdout_lines": []}
changed: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => {"changed": true, "cmd": "rm -rf /var/lib/cni/ /var/lib/kubelet/* /etc/cni/ /run/flannel ; ifconfig cni0 down; ifconfig flannel.1 down;", "delta": "0:00:00.009928", "end": "2017-09-03 17:19:43.285424", "rc": 0, "start": "2017-09-03 17:19:43.275496", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [all] ************************************************************************************************************************************

TASK [Gathering Facts] ************************************************************************************************************************
ok: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com]
ok: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com]

TASK [common : Add apt key] *******************************************************************************************************************
ok: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com] => {"changed": false}
ok: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => {"changed": false}

TASK [common : Add kubernetes apt repo] *******************************************************************************************************
ok: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => {"changed": false, "repo": "deb http://apt.kubernetes.io/ kubernetes-xenial main", "state": "present"}
ok: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com] => {"changed": false, "repo": "deb http://apt.kubernetes.io/ kubernetes-xenial main", "state": "present"}

TASK [common : Install essential packages] ****************************************************************************************************
changed: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com] => (item=[u'kubelet', u'kubeadm', u'kubectl', u'kubernetes-cni', u'docker.io']) => {"cache_update_time": 1504459189, "cache_updated": true, "changed": true, "item": ["kubelet", "kubeadm", "kubectl", "kubernetes-cni", "docker.io"], "stderr": "", "stderr_lines": [], "stdout": "Reading package lists...\nBuilding dependency tree...\nReading state information...\nThe following NEW packages will be installed:\n  kubeadm kubectl kubelet kubernetes-cni\n0 upgraded, 4 newly installed, 0 to remove and 9 not upgraded.\nNeed to get 0 B/45.0 MB of archives.\nAfter this operation, 333 MB of additional disk space will be used.\nSelecting previously unselected package kubernetes-cni.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 76350 files and directories currently installed.)\r\nPreparing to unpack .../kubernetes-cni_0.5.1-00_amd64.deb ...\r\nUnpacking kubernetes-cni (0.5.1-00) ...\r\nSelecting previously unselected package kubelet.\r\nPreparing to unpack .../kubelet_1.7.5-00_amd64.deb ...\r\nUnpacking kubelet (1.7.5-00) ...\r\nSelecting previously unselected package kubectl.\r\nPreparing to unpack .../kubectl_1.7.5-00_amd64.deb ...\r\nUnpacking kubectl (1.7.5-00) ...\r\nSelecting previously unselected package kubeadm.\r\nPreparing to unpack .../kubeadm_1.7.5-00_amd64.deb ...\r\nUnpacking kubeadm (1.7.5-00) ...\r\nSetting up kubernetes-cni (0.5.1-00) ...\r\nSetting up kubelet (1.7.5-00) ...\r\nSetting up kubectl (1.7.5-00) ...\r\nSetting up kubeadm (1.7.5-00) ...\r\n", "stdout_lines": ["Reading package lists...", "Building dependency tree...", "Reading state information...", "The following NEW packages will be installed:", "  kubeadm kubectl kubelet kubernetes-cni", "0 upgraded, 4 newly installed, 0 to remove and 9 not upgraded.", "Need to get 0 B/45.0 MB of archives.", "After this operation, 333 MB of additional disk space will be used.", "Selecting previously unselected package kubernetes-cni.", "(Reading database ... ", "(Reading database ... 5%", "(Reading database ... 10%", "(Reading database ... 15%", "(Reading database ... 20%", "(Reading database ... 25%", "(Reading database ... 30%", "(Reading database ... 35%", "(Reading database ... 40%", "(Reading database ... 45%", "(Reading database ... 50%", "(Reading database ... 55%", "(Reading database ... 60%", "(Reading database ... 65%", "(Reading database ... 70%", "(Reading database ... 75%", "(Reading database ... 80%", "(Reading database ... 85%", "(Reading database ... 90%", "(Reading database ... 95%", "(Reading database ... 100%", "(Reading database ... 76350 files and directories currently installed.)", "Preparing to unpack .../kubernetes-cni_0.5.1-00_amd64.deb ...", "Unpacking kubernetes-cni (0.5.1-00) ...", "Selecting previously unselected package kubelet.", "Preparing to unpack .../kubelet_1.7.5-00_amd64.deb ...", "Unpacking kubelet (1.7.5-00) ...", "Selecting previously unselected package kubectl.", "Preparing to unpack .../kubectl_1.7.5-00_amd64.deb ...", "Unpacking kubectl (1.7.5-00) ...", "Selecting previously unselected package kubeadm.", "Preparing to unpack .../kubeadm_1.7.5-00_amd64.deb ...", "Unpacking kubeadm (1.7.5-00) ...", "Setting up kubernetes-cni (0.5.1-00) ...", "Setting up kubelet (1.7.5-00) ...", "Setting up kubectl (1.7.5-00) ...", "Setting up kubeadm (1.7.5-00) ..."]}
changed: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => (item=[u'kubelet', u'kubeadm', u'kubectl', u'kubernetes-cni', u'docker.io']) => {"cache_update_time": 1504459189, "cache_updated": true, "changed": true, "item": ["kubelet", "kubeadm", "kubectl", "kubernetes-cni", "docker.io"], "stderr": "", "stderr_lines": [], "stdout": "Reading package lists...\nBuilding dependency tree...\nReading state information...\nThe following NEW packages will be installed:\n  kubeadm kubectl kubelet kubernetes-cni\n0 upgraded, 4 newly installed, 0 to remove and 34 not upgraded.\nNeed to get 0 B/45.0 MB of archives.\nAfter this operation, 333 MB of additional disk space will be used.\nSelecting previously unselected package kubernetes-cni.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 52016 files and directories currently installed.)\r\nPreparing to unpack .../kubernetes-cni_0.5.1-00_amd64.deb ...\r\nUnpacking kubernetes-cni (0.5.1-00) ...\r\nSelecting previously unselected package kubelet.\r\nPreparing to unpack .../kubelet_1.7.5-00_amd64.deb ...\r\nUnpacking kubelet (1.7.5-00) ...\r\nSelecting previously unselected package kubectl.\r\nPreparing to unpack .../kubectl_1.7.5-00_amd64.deb ...\r\nUnpacking kubectl (1.7.5-00) ...\r\nSelecting previously unselected package kubeadm.\r\nPreparing to unpack .../kubeadm_1.7.5-00_amd64.deb ...\r\nUnpacking kubeadm (1.7.5-00) ...\r\nSetting up kubernetes-cni (0.5.1-00) ...\r\nSetting up kubelet (1.7.5-00) ...\r\nSetting up kubectl (1.7.5-00) ...\r\nSetting up kubeadm (1.7.5-00) ...\r\n", "stdout_lines": ["Reading package lists...", "Building dependency tree...", "Reading state information...", "The following NEW packages will be installed:", "  kubeadm kubectl kubelet kubernetes-cni", "0 upgraded, 4 newly installed, 0 to remove and 34 not upgraded.", "Need to get 0 B/45.0 MB of archives.", "After this operation, 333 MB of additional disk space will be used.", "Selecting previously unselected package kubernetes-cni.", "(Reading database ... ", "(Reading database ... 5%", "(Reading database ... 10%", "(Reading database ... 15%", "(Reading database ... 20%", "(Reading database ... 25%", "(Reading database ... 30%", "(Reading database ... 35%", "(Reading database ... 40%", "(Reading database ... 45%", "(Reading database ... 50%", "(Reading database ... 55%", "(Reading database ... 60%", "(Reading database ... 65%", "(Reading database ... 70%", "(Reading database ... 75%", "(Reading database ... 80%", "(Reading database ... 85%", "(Reading database ... 90%", "(Reading database ... 95%", "(Reading database ... 100%", "(Reading database ... 52016 files and directories currently installed.)", "Preparing to unpack .../kubernetes-cni_0.5.1-00_amd64.deb ...", "Unpacking kubernetes-cni (0.5.1-00) ...", "Selecting previously unselected package kubelet.", "Preparing to unpack .../kubelet_1.7.5-00_amd64.deb ...", "Unpacking kubelet (1.7.5-00) ...", "Selecting previously unselected package kubectl.", "Preparing to unpack .../kubectl_1.7.5-00_amd64.deb ...", "Unpacking kubectl (1.7.5-00) ...", "Selecting previously unselected package kubeadm.", "Preparing to unpack .../kubeadm_1.7.5-00_amd64.deb ...", "Unpacking kubeadm (1.7.5-00) ...", "Setting up kubernetes-cni (0.5.1-00) ...", "Setting up kubelet (1.7.5-00) ...", "Setting up kubectl (1.7.5-00) ...", "Setting up kubeadm (1.7.5-00) ..."]}

TASK [common : Start docker] ******************************************************************************************************************
ok: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com] => {"changed": false, "enabled": true, "name": "docker", "state": "started", "status": {"ActiveEnterTimestamp": "Sun 2017-09-03 15:54:11 UTC", "ActiveEnterTimestampMonotonic": "94598721594", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "docker.socket systemd-journald.socket network.target basic.target system.slice sysinit.target", "AllowIsolate": "no", "AmbientCapabilities": "0", "AssertResult": "yes", "AssertTimestamp": "Sun 2017-09-03 15:54:10 UTC", "AssertTimestampMonotonic": "94597219998", "Before": "shutdown.target multi-user.target", "BlockIOAccounting": "no", "BlockIOWeight": "18446744073709551615", "CPUAccounting": "no", "CPUQuotaPerSecUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "18446744073709551615", "CPUUsageNSec": "11829989806", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "18446744073709551615", "ConditionResult": "yes", "ConditionTimestamp": "Sun 2017-09-03 15:54:10 UTC", "ConditionTimestampMonotonic": "94597219998", "Conflicts": "shutdown.target", "ConsistsOf": "docker.socket", "ControlGroup": "/system.slice/docker.service", "ControlPID": "0", "DefaultDependencies": "yes", "Delegate": "yes", "Description": "Docker Application Container Engine", "DevicePolicy": "auto", "Documentation": "https://docs.docker.com", "EnvironmentFile": "/etc/default/docker (ignore_errors=yes)", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "22041", "ExecMainStartTimestamp": "Sun 2017-09-03 15:54:10 UTC", "ExecMainStartTimestampMonotonic": "94597220653", "ExecMainStatus": "0", "ExecReload": "{ path=/bin/kill ; argv[]=/bin/kill -s HUP $MAINPID ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStart": "{ path=/usr/bin/dockerd ; argv[]=/usr/bin/dockerd -H fd:// $DOCKER_OPTS ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FragmentPath": "/lib/systemd/system/docker.service", "GuessMainPID": "yes", "IOScheduling": "0", "Id": "docker.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Sun 2017-09-03 15:54:10 UTC", "InactiveExitTimestampMonotonic": "94597220680", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KillMode": "process", "KillSignal": "15", "LimitAS": "18446744073709551615", "LimitASSoft": "18446744073709551615", "LimitCORE": "18446744073709551615", "LimitCORESoft": "18446744073709551615", "LimitCPU": "18446744073709551615", "LimitCPUSoft": "18446744073709551615", "LimitDATA": "18446744073709551615", "LimitDATASoft": "18446744073709551615", "LimitFSIZE": "18446744073709551615", "LimitFSIZESoft": "18446744073709551615", "LimitLOCKS": "18446744073709551615", "LimitLOCKSSoft": "18446744073709551615", "LimitMEMLOCK": "65536", "LimitMEMLOCKSoft": "65536", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "18446744073709551615", "LimitNOFILESoft": "18446744073709551615", "LimitNPROC": "18446744073709551615", "LimitNPROCSoft": "18446744073709551615", "LimitRSS": "18446744073709551615", "LimitRSSSoft": "18446744073709551615", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "18446744073709551615", "LimitRTTIMESoft": "18446744073709551615", "LimitSIGPENDING": "3902", "LimitSIGPENDINGSoft": "3902", "LimitSTACK": "18446744073709551615", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "MainPID": "22041", "MemoryAccounting": "no", "MemoryCurrent": "154509312", "MemoryLimit": "18446744073709551615", "MountFlags": "0", "NFileDescriptorStore": "0", "Names": "docker.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "PermissionsStartOnly": "no", "PrivateDevices": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "ProtectHome": "no", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "RemainAfterExit": "no", "Requires": "sysinit.target docker.socket system.slice", "Restart": "no", "RestartUSec": "100ms", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeMaxUSec": "infinity", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitInterval": "10000000", "StartupBlockIOWeight": "18446744073709551615", "StartupCPUShares": "18446744073709551615", "StateChangeTimestamp": "Sun 2017-09-03 15:54:11 UTC", "StateChangeTimestampMonotonic": "94598721594", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "0", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "no", "TasksCurrent": "32", "TasksMax": "18446744073709551615", "TimeoutStartUSec": "infinity", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "TriggeredBy": "docker.socket", "Type": "notify", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "multi-user.target", "WatchdogTimestamp": "Sun 2017-09-03 15:54:11 UTC", "WatchdogTimestampMonotonic": "94598721593", "WatchdogUSec": "0"}}
ok: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => {"changed": false, "enabled": true, "name": "docker", "state": "started", "status": {"ActiveEnterTimestamp": "Sun 2017-09-03 15:54:11 UTC", "ActiveEnterTimestampMonotonic": "6674475887", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "basic.target systemd-journald.socket docker.socket network.target sysinit.target system.slice", "AllowIsolate": "no", "AmbientCapabilities": "0", "AssertResult": "yes", "AssertTimestamp": "Sun 2017-09-03 15:54:10 UTC", "AssertTimestampMonotonic": "6673140544", "Before": "multi-user.target shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "18446744073709551615", "CPUAccounting": "no", "CPUQuotaPerSecUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "18446744073709551615", "CPUUsageNSec": "52498895492", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "18446744073709551615", "ConditionResult": "yes", "ConditionTimestamp": "Sun 2017-09-03 15:54:10 UTC", "ConditionTimestampMonotonic": "6673140544", "Conflicts": "shutdown.target", "ConsistsOf": "docker.socket", "ControlGroup": "/system.slice/docker.service", "ControlPID": "0", "DefaultDependencies": "yes", "Delegate": "yes", "Description": "Docker Application Container Engine", "DevicePolicy": "auto", "Documentation": "https://docs.docker.com", "EnvironmentFile": "/etc/default/docker (ignore_errors=yes)", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "15424", "ExecMainStartTimestamp": "Sun 2017-09-03 15:54:10 UTC", "ExecMainStartTimestampMonotonic": "6673141259", "ExecMainStatus": "0", "ExecReload": "{ path=/bin/kill ; argv[]=/bin/kill -s HUP $MAINPID ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStart": "{ path=/usr/bin/dockerd ; argv[]=/usr/bin/dockerd -H fd:// $DOCKER_OPTS ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FragmentPath": "/lib/systemd/system/docker.service", "GuessMainPID": "yes", "IOScheduling": "0", "Id": "docker.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Sun 2017-09-03 15:54:10 UTC", "InactiveExitTimestampMonotonic": "6673141306", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KillMode": "process", "KillSignal": "15", "LimitAS": "18446744073709551615", "LimitASSoft": "18446744073709551615", "LimitCORE": "18446744073709551615", "LimitCORESoft": "18446744073709551615", "LimitCPU": "18446744073709551615", "LimitCPUSoft": "18446744073709551615", "LimitDATA": "18446744073709551615", "LimitDATASoft": "18446744073709551615", "LimitFSIZE": "18446744073709551615", "LimitFSIZESoft": "18446744073709551615", "LimitLOCKS": "18446744073709551615", "LimitLOCKSSoft": "18446744073709551615", "LimitMEMLOCK": "65536", "LimitMEMLOCKSoft": "65536", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "18446744073709551615", "LimitNOFILESoft": "18446744073709551615", "LimitNPROC": "18446744073709551615", "LimitNPROCSoft": "18446744073709551615", "LimitRSS": "18446744073709551615", "LimitRSSSoft": "18446744073709551615", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "18446744073709551615", "LimitRTTIMESoft": "18446744073709551615", "LimitSIGPENDING": "3902", "LimitSIGPENDINGSoft": "3902", "LimitSTACK": "18446744073709551615", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "MainPID": "15424", "MemoryAccounting": "no", "MemoryCurrent": "155484160", "MemoryLimit": "18446744073709551615", "MountFlags": "0", "NFileDescriptorStore": "0", "Names": "docker.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "PermissionsStartOnly": "no", "PrivateDevices": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "ProtectHome": "no", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "RemainAfterExit": "no", "Requires": "sysinit.target system.slice docker.socket", "Restart": "no", "RestartUSec": "100ms", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeMaxUSec": "infinity", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitInterval": "10000000", "StartupBlockIOWeight": "18446744073709551615", "StartupCPUShares": "18446744073709551615", "StateChangeTimestamp": "Sun 2017-09-03 15:54:11 UTC", "StateChangeTimestampMonotonic": "6674475887", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "0", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "no", "TasksCurrent": "68", "TasksMax": "18446744073709551615", "TimeoutStartUSec": "infinity", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "TriggeredBy": "docker.socket", "Type": "notify", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "multi-user.target", "WatchdogTimestamp": "Sun 2017-09-03 15:54:11 UTC", "WatchdogTimestampMonotonic": "6674475886", "WatchdogUSec": "0"}}

TASK [common : Start kubelet] *****************************************************************************************************************
ok: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => {"changed": false, "enabled": true, "name": "kubelet", "state": "started", "status": {"ActiveEnterTimestamp": "Sun 2017-09-03 17:19:58 UTC", "ActiveEnterTimestampMonotonic": "11821594210", "ActiveExitTimestamp": "Sun 2017-09-03 17:19:59 UTC", "ActiveExitTimestampMonotonic": "11821920364", "ActiveState": "activating", "After": "sysinit.target basic.target system.slice systemd-journald.socket", "AllowIsolate": "no", "AmbientCapabilities": "0", "AssertResult": "yes", "AssertTimestamp": "Sun 2017-09-03 17:19:58 UTC", "AssertTimestampMonotonic": "11821593520", "Before": "multi-user.target shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "18446744073709551615", "CPUAccounting": "no", "CPUQuotaPerSecUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "18446744073709551615", "CPUUsageNSec": "18446744073709551615", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "18446744073709551615", "ConditionResult": "yes", "ConditionTimestamp": "Sun 2017-09-03 17:19:58 UTC", "ConditionTimestampMonotonic": "11821593520", "Conflicts": "shutdown.target", "ControlPID": "0", "DefaultDependencies": "yes", "Delegate": "no", "Description": "kubelet: The Kubernetes Node Agent", "DevicePolicy": "auto", "Documentation": "http://kubernetes.io/docs/", "DropInPaths": "/etc/systemd/system/kubelet.service.d/10-kubeadm.conf", "Environment": "KUBELET_KUBECONFIG_ARGS=--kubeconfig=/etc/kubernetes/kubelet.conf\\x20--require-kubeconfig=true KUBELET_SYSTEM_PODS_ARGS=--pod-manifest-path=/etc/kubernetes/manifests\\x20--allow-privileged=true KUBELET_NETWORK_ARGS=--network-plugin=cni\\x20--cni-conf-dir=/etc/cni/net.d\\x20--cni-bin-dir=/opt/cni/bin KUBELET_DNS_ARGS=--cluster-dns=10.96.0.10\\x20--cluster-domain=cluster.local KUBELET_AUTHZ_ARGS=--authorization-mode=Webhook\\x20--client-ca-file=/etc/kubernetes/pki/ca.crt KUBELET_CADVISOR_ARGS=--cadvisor-port=0", "ExecMainCode": "1", "ExecMainExitTimestamp": "Sun 2017-09-03 17:19:59 UTC", "ExecMainExitTimestampMonotonic": "11821920237", "ExecMainPID": "1440", "ExecMainStartTimestamp": "Sun 2017-09-03 17:19:58 UTC", "ExecMainStartTimestampMonotonic": "11821594146", "ExecMainStatus": "1", "ExecStart": "{ path=/usr/bin/kubelet ; argv[]=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_SYSTEM_PODS_ARGS $KUBELET_NETWORK_ARGS $KUBELET_DNS_ARGS $KUBELET_AUTHZ_ARGS $KUBELET_CADVISOR_ARGS $KUBELET_EXTRA_ARGS ; ignore_errors=no ; start_time=[Sun 2017-09-03 17:19:58 UTC] ; stop_time=[Sun 2017-09-03 17:19:59 UTC] ; pid=1440 ; code=exited ; status=1 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FragmentPath": "/lib/systemd/system/kubelet.service", "GuessMainPID": "yes", "IOScheduling": "0", "Id": "kubelet.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Sun 2017-09-03 17:19:59 UTC", "InactiveEnterTimestampMonotonic": "11821920364", "InactiveExitTimestamp": "Sun 2017-09-03 17:19:59 UTC", "InactiveExitTimestampMonotonic": "11821920783", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "18446744073709551615", "LimitASSoft": "18446744073709551615", "LimitCORE": "18446744073709551615", "LimitCORESoft": "0", "LimitCPU": "18446744073709551615", "LimitCPUSoft": "18446744073709551615", "LimitDATA": "18446744073709551615", "LimitDATASoft": "18446744073709551615", "LimitFSIZE": "18446744073709551615", "LimitFSIZESoft": "18446744073709551615", "LimitLOCKS": "18446744073709551615", "LimitLOCKSSoft": "18446744073709551615", "LimitMEMLOCK": "65536", "LimitMEMLOCKSoft": "65536", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "4096", "LimitNOFILESoft": "1024", "LimitNPROC": "3902", "LimitNPROCSoft": "3902", "LimitRSS": "18446744073709551615", "LimitRSSSoft": "18446744073709551615", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "18446744073709551615", "LimitRTTIMESoft": "18446744073709551615", "LimitSIGPENDING": "3902", "LimitSIGPENDINGSoft": "3902", "LimitSTACK": "18446744073709551615", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "MainPID": "0", "MemoryAccounting": "no", "MemoryCurrent": "18446744073709551615", "MemoryLimit": "18446744073709551615", "MountFlags": "0", "NFileDescriptorStore": "0", "Names": "kubelet.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "PermissionsStartOnly": "no", "PrivateDevices": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "ProtectHome": "no", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "RemainAfterExit": "no", "Requires": "sysinit.target system.slice", "Restart": "always", "RestartUSec": "10s", "Result": "exit-code", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeMaxUSec": "infinity", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitInterval": "0", "StartupBlockIOWeight": "18446744073709551615", "StartupCPUShares": "18446744073709551615", "StateChangeTimestamp": "Sun 2017-09-03 17:19:59 UTC", "StateChangeTimestampMonotonic": "11821920783", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "auto-restart", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "0", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "no", "TasksCurrent": "18446744073709551615", "TasksMax": "18446744073709551615", "TimeoutStartUSec": "1min 30s", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "simple", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "multi-user.target", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}
ok: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com] => {"changed": false, "enabled": true, "name": "kubelet", "state": "started", "status": {"ActiveEnterTimestamp": "Sun 2017-09-03 17:19:58 UTC", "ActiveEnterTimestampMonotonic": "99745146564", "ActiveExitTimestamp": "Sun 2017-09-03 17:19:58 UTC", "ActiveExitTimestampMonotonic": "99745497723", "ActiveState": "activating", "After": "sysinit.target basic.target system.slice systemd-journald.socket", "AllowIsolate": "no", "AmbientCapabilities": "0", "AssertResult": "yes", "AssertTimestamp": "Sun 2017-09-03 17:19:58 UTC", "AssertTimestampMonotonic": "99745145966", "Before": "shutdown.target multi-user.target", "BlockIOAccounting": "no", "BlockIOWeight": "18446744073709551615", "CPUAccounting": "no", "CPUQuotaPerSecUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "18446744073709551615", "CPUUsageNSec": "18446744073709551615", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "18446744073709551615", "ConditionResult": "yes", "ConditionTimestamp": "Sun 2017-09-03 17:19:58 UTC", "ConditionTimestampMonotonic": "99745145966", "Conflicts": "shutdown.target", "ControlPID": "0", "DefaultDependencies": "yes", "Delegate": "no", "Description": "kubelet: The Kubernetes Node Agent", "DevicePolicy": "auto", "Documentation": "http://kubernetes.io/docs/", "DropInPaths": "/etc/systemd/system/kubelet.service.d/10-kubeadm.conf", "Environment": "KUBELET_KUBECONFIG_ARGS=--kubeconfig=/etc/kubernetes/kubelet.conf\\x20--require-kubeconfig=true KUBELET_SYSTEM_PODS_ARGS=--pod-manifest-path=/etc/kubernetes/manifests\\x20--allow-privileged=true KUBELET_NETWORK_ARGS=--network-plugin=cni\\x20--cni-conf-dir=/etc/cni/net.d\\x20--cni-bin-dir=/opt/cni/bin KUBELET_DNS_ARGS=--cluster-dns=10.96.0.10\\x20--cluster-domain=cluster.local KUBELET_AUTHZ_ARGS=--authorization-mode=Webhook\\x20--client-ca-file=/etc/kubernetes/pki/ca.crt KUBELET_CADVISOR_ARGS=--cadvisor-port=0", "ExecMainCode": "1", "ExecMainExitTimestamp": "Sun 2017-09-03 17:19:58 UTC", "ExecMainExitTimestampMonotonic": "99745497602", "ExecMainPID": "2882", "ExecMainStartTimestamp": "Sun 2017-09-03 17:19:58 UTC", "ExecMainStartTimestampMonotonic": "99745146533", "ExecMainStatus": "1", "ExecStart": "{ path=/usr/bin/kubelet ; argv[]=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_SYSTEM_PODS_ARGS $KUBELET_NETWORK_ARGS $KUBELET_DNS_ARGS $KUBELET_AUTHZ_ARGS $KUBELET_CADVISOR_ARGS $KUBELET_EXTRA_ARGS ; ignore_errors=no ; start_time=[Sun 2017-09-03 17:19:58 UTC] ; stop_time=[Sun 2017-09-03 17:19:58 UTC] ; pid=2882 ; code=exited ; status=1 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FragmentPath": "/lib/systemd/system/kubelet.service", "GuessMainPID": "yes", "IOScheduling": "0", "Id": "kubelet.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Sun 2017-09-03 17:19:58 UTC", "InactiveEnterTimestampMonotonic": "99745497723", "InactiveExitTimestamp": "Sun 2017-09-03 17:19:58 UTC", "InactiveExitTimestampMonotonic": "99745498129", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "18446744073709551615", "LimitASSoft": "18446744073709551615", "LimitCORE": "18446744073709551615", "LimitCORESoft": "0", "LimitCPU": "18446744073709551615", "LimitCPUSoft": "18446744073709551615", "LimitDATA": "18446744073709551615", "LimitDATASoft": "18446744073709551615", "LimitFSIZE": "18446744073709551615", "LimitFSIZESoft": "18446744073709551615", "LimitLOCKS": "18446744073709551615", "LimitLOCKSSoft": "18446744073709551615", "LimitMEMLOCK": "65536", "LimitMEMLOCKSoft": "65536", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "4096", "LimitNOFILESoft": "1024", "LimitNPROC": "3902", "LimitNPROCSoft": "3902", "LimitRSS": "18446744073709551615", "LimitRSSSoft": "18446744073709551615", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "18446744073709551615", "LimitRTTIMESoft": "18446744073709551615", "LimitSIGPENDING": "3902", "LimitSIGPENDINGSoft": "3902", "LimitSTACK": "18446744073709551615", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "MainPID": "0", "MemoryAccounting": "no", "MemoryCurrent": "18446744073709551615", "MemoryLimit": "18446744073709551615", "MountFlags": "0", "NFileDescriptorStore": "0", "Names": "kubelet.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "PermissionsStartOnly": "no", "PrivateDevices": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "ProtectHome": "no", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "RemainAfterExit": "no", "Requires": "sysinit.target system.slice", "Restart": "always", "RestartUSec": "10s", "Result": "exit-code", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeMaxUSec": "infinity", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitInterval": "0", "StartupBlockIOWeight": "18446744073709551615", "StartupCPUShares": "18446744073709551615", "StateChangeTimestamp": "Sun 2017-09-03 17:19:58 UTC", "StateChangeTimestampMonotonic": "99745498129", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "auto-restart", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "0", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "no", "TasksCurrent": "18446744073709551615", "TasksMax": "18446744073709551615", "TimeoutStartUSec": "1min 30s", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "simple", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "multi-user.target", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}

PLAY [kube-master] ****************************************************************************************************************************

TASK [Gathering Facts] ************************************************************************************************************************
ok: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com]

TASK [master : Generate cluster token] ********************************************************************************************************
skipping: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => {"changed": false, "skip_reason": "Conditional result was False", "skipped": true}

TASK [master : set_fact] **********************************************************************************************************************
skipping: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => {"changed": false, "skip_reason": "Conditional result was False", "skipped": true}

TASK [master : Initialize kubernetes] *********************************************************************************************************
changed: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => {"changed": true, "cmd": "/usr/bin/kubeadm init --token secret.token4yourbyok8s --kubernetes-version v1.7.4 --pod-network-cidr=10.244.0.0/16", "delta": "0:00:56.775318", "end": "2017-09-03 17:21:01.571947", "rc": 0, "start": "2017-09-03 17:20:04.796629", "stderr": "", "stderr_lines": [], "stdout": "[kubeadm] WARNING: kubeadm is in beta, please do not use it for production clusters.\n[init] Using Kubernetes version: v1.7.4\n[init] Using Authorization modes: [Node RBAC]\n[preflight] Running pre-flight checks\n[kubeadm] WARNING: starting in 1.8, tokens expire after 24 hours by default (if you require a non-expiring token use --token-ttl 0)\n[certificates] Generated CA certificate and key.\n[certificates] Generated API server certificate and key.\n[certificates] API Server serving cert is signed for DNS names [ip-172-31-7-212 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 172.31.7.212]\n[certificates] Generated API server kubelet client certificate and key.\n[certificates] Generated service account token signing key and public key.\n[certificates] Generated front-proxy CA certificate and key.\n[certificates] Generated front-proxy client certificate and key.\n[certificates] Valid certificates and keys now exist in \"/etc/kubernetes/pki\"\n[kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/controller-manager.conf\"\n[kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/scheduler.conf\"\n[kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/admin.conf\"\n[kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/kubelet.conf\"\n[apiclient] Created API client, waiting for the control plane to become ready\n[apiclient] All control plane components are healthy after 53.001861 seconds\n[token] Using token: secret.token4yourbyok8s\n[apiconfig] Created RBAC rules\n[addons] Applied essential addon: kube-proxy\n[addons] Applied essential addon: kube-dns\n\nYour Kubernetes master has initialized successfully!\n\nTo start using your cluster, you need to run (as a regular user):\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nYou should now deploy a pod network to the cluster.\nRun \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n  http://kubernetes.io/docs/admin/addons/\n\nYou can now join any number of machines by running the following on each node\nas root:\n\n  kubeadm join --token secret.token4yourbyok8s 172.31.7.212:6443", "stdout_lines": ["[kubeadm] WARNING: kubeadm is in beta, please do not use it for production clusters.", "[init] Using Kubernetes version: v1.7.4", "[init] Using Authorization modes: [Node RBAC]", "[preflight] Running pre-flight checks", "[kubeadm] WARNING: starting in 1.8, tokens expire after 24 hours by default (if you require a non-expiring token use --token-ttl 0)", "[certificates] Generated CA certificate and key.", "[certificates] Generated API server certificate and key.", "[certificates] API Server serving cert is signed for DNS names [ip-172-31-7-212 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 172.31.7.212]", "[certificates] Generated API server kubelet client certificate and key.", "[certificates] Generated service account token signing key and public key.", "[certificates] Generated front-proxy CA certificate and key.", "[certificates] Generated front-proxy client certificate and key.", "[certificates] Valid certificates and keys now exist in \"/etc/kubernetes/pki\"", "[kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/controller-manager.conf\"", "[kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/scheduler.conf\"", "[kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/admin.conf\"", "[kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/kubelet.conf\"", "[apiclient] Created API client, waiting for the control plane to become ready", "[apiclient] All control plane components are healthy after 53.001861 seconds", "[token] Using token: secret.token4yourbyok8s", "[apiconfig] Created RBAC rules", "[addons] Applied essential addon: kube-proxy", "[addons] Applied essential addon: kube-dns", "", "Your Kubernetes master has initialized successfully!", "", "To start using your cluster, you need to run (as a regular user):", "", "  mkdir -p $HOME/.kube", "  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config", "  sudo chown $(id -u):$(id -g) $HOME/.kube/config", "", "You should now deploy a pod network to the cluster.", "Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:", "  http://kubernetes.io/docs/admin/addons/", "", "You can now join any number of machines by running the following on each node", "as root:", "", "  kubeadm join --token secret.token4yourbyok8s 172.31.7.212:6443"]}

TASK [master : Wait for images pulling and service to start] **********************************************************************************
Pausing for 10 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
ok: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => {"changed": false, "delta": 10, "rc": 0, "start": "2017-09-03 13:21:01.456338", "stderr": "", "stdout": "Paused for 10.0 seconds", "stop": "2017-09-03 13:21:11.456684", "user_input": ""}

TASK [master : Wait for images pulling and service to start] **********************************************************************************
Pausing for 10 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
ok: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => {"changed": false, "delta": 10, "rc": 0, "start": "2017-09-03 13:21:11.492372", "stderr": "", "stdout": "Paused for 10.0 seconds", "stop": "2017-09-03 13:21:21.492786", "user_input": ""}

TASK [master : sanity check for pods] *********************************************************************************************************
changed: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => {"attempts": 1, "changed": true, "cmd": "/usr/bin/kubectl get --namespace kube-system pods | tail -n +2 | grep -v -w 'Running' | grep -v 'kube-dns' || true", "delta": "0:00:00.454348", "end": "2017-09-03 17:21:23.484798", "rc": 0, "start": "2017-09-03 17:21:23.030450", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [master : copy flannel files] ************************************************************************************************************
ok: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => (item=kube-flannel.yml) => {"changed": false, "checksum": "1a4c50d7eab6d52b08c4ce563b9eb1ab204c4d6d", "dest": "/tmp/kube-flannel.yml", "gid": 0, "group": "root", "item": "kube-flannel.yml", "mode": "0644", "owner": "root", "path": "/tmp/kube-flannel.yml", "size": 2175, "state": "file", "uid": 0}
ok: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => (item=kube-flannel-rbac.yml) => {"changed": false, "checksum": "c1b7e255b0cbd557851b044a5e590a5422debaaf", "dest": "/tmp/kube-flannel-rbac.yml", "gid": 0, "group": "root", "item": "kube-flannel-rbac.yml", "mode": "0644", "owner": "root", "path": "/tmp/kube-flannel-rbac.yml", "size": 849, "state": "file", "uid": 0}

TASK [master : apply flannel network plugin] **************************************************************************************************
changed: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => (item=kube-flannel.yml) => {"changed": true, "cmd": ["/usr/bin/kubectl", "apply", "-f", "/tmp/kube-flannel.yml"], "delta": "0:00:00.404319", "end": "2017-09-03 17:21:29.113238", "item": "kube-flannel.yml", "rc": 0, "start": "2017-09-03 17:21:28.708919", "stderr": "", "stderr_lines": [], "stdout": "serviceaccount \"flannel\" created\nconfigmap \"kube-flannel-cfg\" created\ndaemonset \"kube-flannel-ds\" created", "stdout_lines": ["serviceaccount \"flannel\" created", "configmap \"kube-flannel-cfg\" created", "daemonset \"kube-flannel-ds\" created"]}
changed: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => (item=kube-flannel-rbac.yml) => {"changed": true, "cmd": ["/usr/bin/kubectl", "apply", "-f", "/tmp/kube-flannel-rbac.yml"], "delta": "0:00:00.267082", "end": "2017-09-03 17:21:30.515148", "item": "kube-flannel-rbac.yml", "rc": 0, "start": "2017-09-03 17:21:30.248066", "stderr": "", "stderr_lines": [], "stdout": "clusterrole \"flannel\" created\nclusterrolebinding \"flannel\" created", "stdout_lines": ["clusterrole \"flannel\" created", "clusterrolebinding \"flannel\" created"]}

PLAY [kube-node] ******************************************************************************************************************************

TASK [Gathering Facts] ************************************************************************************************************************
ok: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com]

TASK [node : set_fact] ************************************************************************************************************************
skipping: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com] => {"changed": false, "skip_reason": "Conditional result was False", "skipped": true}

TASK [node : Join cluster] ********************************************************************************************************************
changed: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com] => {"changed": true, "cmd": "/usr/bin/kubeadm join ec2-13-58-13-217.us-east-2.compute.amazonaws.com:6443 --token secret.token4yourbyok8s", "delta": "0:00:00.284313", "end": "2017-09-03 17:21:33.533570", "rc": 0, "start": "2017-09-03 17:21:33.249257", "stderr": "", "stderr_lines": [], "stdout": "[kubeadm] WARNING: kubeadm is in beta, please do not use it for production clusters.\n[preflight] Running pre-flight checks\n[discovery] Trying to connect to API Server \"ec2-13-58-13-217.us-east-2.compute.amazonaws.com:6443\"\n[discovery] Created cluster-info discovery client, requesting info from \"https://ec2-13-58-13-217.us-east-2.compute.amazonaws.com:6443\"\n[discovery] Cluster info signature and contents are valid, will use API Server \"https://ec2-13-58-13-217.us-east-2.compute.amazonaws.com:6443\"\n[discovery] Successfully established connection with API Server \"ec2-13-58-13-217.us-east-2.compute.amazonaws.com:6443\"\n[bootstrap] Detected server version: v1.7.4\n[bootstrap] The server supports the Certificates API (certificates.k8s.io/v1beta1)\n[csr] Created API client to obtain unique certificate for this node, generating keys and certificate signing request\n[csr] Received signed certificate from the API server, generating KubeConfig...\n[kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/kubelet.conf\"\n\nNode join complete:\n* Certificate signing request sent to master and response\n  received.\n* Kubelet informed of new secure connection details.\n\nRun 'kubectl get nodes' on the master to see this machine join.", "stdout_lines": ["[kubeadm] WARNING: kubeadm is in beta, please do not use it for production clusters.", "[preflight] Running pre-flight checks", "[discovery] Trying to connect to API Server \"ec2-13-58-13-217.us-east-2.compute.amazonaws.com:6443\"", "[discovery] Created cluster-info discovery client, requesting info from \"https://ec2-13-58-13-217.us-east-2.compute.amazonaws.com:6443\"", "[discovery] Cluster info signature and contents are valid, will use API Server \"https://ec2-13-58-13-217.us-east-2.compute.amazonaws.com:6443\"", "[discovery] Successfully established connection with API Server \"ec2-13-58-13-217.us-east-2.compute.amazonaws.com:6443\"", "[bootstrap] Detected server version: v1.7.4", "[bootstrap] The server supports the Certificates API (certificates.k8s.io/v1beta1)", "[csr] Created API client to obtain unique certificate for this node, generating keys and certificate signing request", "[csr] Received signed certificate from the API server, generating KubeConfig...", "[kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/kubelet.conf\"", "", "Node join complete:", "* Certificate signing request sent to master and response", "  received.", "* Kubelet informed of new secure connection details.", "", "Run 'kubectl get nodes' on the master to see this machine join."]}

PLAY [all] ************************************************************************************************************************************

TASK [Gathering Facts] ************************************************************************************************************************
ok: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com]
ok: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com]

TASK [app : copy app yml files] ***************************************************************************************************************
changed: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => (item=deployment.yml) => {"changed": true, "checksum": "f9629edc74f6a4d2c908d9d58c5c0b23ff69bd0f", "dest": "/tmp/deployment.yml", "gid": 0, "group": "root", "item": "deployment.yml", "md5sum": "d0c25c2a8de48ef5e9f70770d2a8b757", "mode": "0644", "owner": "root", "size": 406, "src": "/home/ubuntu/.ansible/tmp/ansible-tmp-1504459295.88-19747499171061/source", "state": "file", "uid": 0}
changed: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com] => (item=deployment.yml) => {"changed": true, "checksum": "f9629edc74f6a4d2c908d9d58c5c0b23ff69bd0f", "dest": "/tmp/deployment.yml", "gid": 0, "group": "root", "item": "deployment.yml", "md5sum": "d0c25c2a8de48ef5e9f70770d2a8b757", "mode": "0644", "owner": "root", "size": 406, "src": "/home/ubuntu/.ansible/tmp/ansible-tmp-1504459296.19-88726379255398/source", "state": "file", "uid": 0}
changed: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] => (item=service.yml) => {"changed": true, "checksum": "f518753ddc065d87cb3311eb12d5491c86b0840c", "dest": "/tmp/service.yml", "gid": 0, "group": "root", "item": "service.yml", "md5sum": "e9b1422672d3d088ffc559a29e441f7b", "mode": "0644", "owner": "root", "size": 263, "src": "/home/ubuntu/.ansible/tmp/ansible-tmp-1504459298.13-124466767715165/source", "state": "file", "uid": 0}
changed: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com] => (item=service.yml) => {"changed": true, "checksum": "f518753ddc065d87cb3311eb12d5491c86b0840c", "dest": "/tmp/service.yml", "gid": 0, "group": "root", "item": "service.yml", "md5sum": "e9b1422672d3d088ffc559a29e441f7b", "mode": "0644", "owner": "root", "size": 263, "src": "/home/ubuntu/.ansible/tmp/ansible-tmp-1504459298.32-266879065796724/source", "state": "file", "uid": 0}

TASK [app : bring up application] *************************************************************************************************************
failed: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] (item=deployment.yml) => {"changed": true, "cmd": ["/usr/bin/kubectl", "--kubectl=/etc/kubernetes/admin.conf", "create", "-f", "/tmp/deployment.yml"], "delta": "0:00:00.159115", "end": "2017-09-03 17:21:41.062444", "failed": true, "item": "deployment.yml", "rc": 1, "start": "2017-09-03 17:21:40.903329", "stderr": "Error: unknown flag: --kubectl\n\n\nExamples:\n  # Create a pod using the data in pod.json.\n  kubectl create -f ./pod.json\n  \n  # Create a pod based on the JSON passed into stdin.\n  cat pod.json | kubectl create -f -\n  \n  # Edit the data in docker-registry.yaml in JSON using the v1 API format then create the resource using the edited data.\n  kubectl create -f docker-registry.yaml --edit --output-version=v1 -o json\n\nAvailable Commands:\n  clusterrole         Create a ClusterRole.\n  clusterrolebinding  Create a ClusterRoleBinding for a particular ClusterRole\n  configmap           Create a configmap from a local file, directory or literal value\n  deployment          Create a deployment with the specified name.\n  namespace           Create a namespace with the specified name\n  poddisruptionbudget Create a pod disruption budget with the specified name.\n  quota               Create a quota with the specified name.\n  role                Create a role with single rule.\n  rolebinding         Create a RoleBinding for a particular Role or ClusterRole\n  secret              Create a secret using specified subcommand\n  service             Create a service using specified subcommand.\n  serviceaccount      Create a service account with the specified name\n\nOptions:\n      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.\n      --dry-run=false: If true, only print the object that would be sent, without sending it.\n      --edit=false: Edit the API resource before creating\n  -f, --filename=[]: Filename, directory, or URL to files to use to create the resource\n      --include-extended-apis=true: If true, include definitions of new APIs via calls to the API server. [default true]\n      --no-headers=false: When using the default or custom-column output format, don't print headers (default print headers).\n  -o, --output='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath].\n      --record=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists.\n  -R, --recursive=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.\n      --save-config=false: If true, the configuration of current object will be saved in its annotation. Otherwise, the annotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.\n      --schema-cache-dir='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '$HOME/.kube/schema'\n  -l, --selector='': Selector (label query) to filter on, supports '=', '==', and '!='.\n  -a, --show-all=false: When printing, show all resources (default hide terminated pods.)\n      --show-labels=false: When printing, show all labels as the last column (default hide labels column)\n      --sort-by='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string.\n      --template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].\n      --validate=true: If true, use a schema to validate the input before sending it\n      --windows-line-endings=false: Only relevant if --edit=true. Use Windows line-endings (default Unix line-endings)\n\nUsage:\n  kubectl create -f FILENAME [options]\n\nUse \"kubectl <command> --help\" for more information about a given command.\nUse \"kubectl options\" for a list of global command-line options (applies to all commands).", "stderr_lines": ["Error: unknown flag: --kubectl", "", "", "Examples:", "  # Create a pod using the data in pod.json.", "  kubectl create -f ./pod.json", "  ", "  # Create a pod based on the JSON passed into stdin.", "  cat pod.json | kubectl create -f -", "  ", "  # Edit the data in docker-registry.yaml in JSON using the v1 API format then create the resource using the edited data.", "  kubectl create -f docker-registry.yaml --edit --output-version=v1 -o json", "", "Available Commands:", "  clusterrole         Create a ClusterRole.", "  clusterrolebinding  Create a ClusterRoleBinding for a particular ClusterRole", "  configmap           Create a configmap from a local file, directory or literal value", "  deployment          Create a deployment with the specified name.", "  namespace           Create a namespace with the specified name", "  poddisruptionbudget Create a pod disruption budget with the specified name.", "  quota               Create a quota with the specified name.", "  role                Create a role with single rule.", "  rolebinding         Create a RoleBinding for a particular Role or ClusterRole", "  secret              Create a secret using specified subcommand", "  service             Create a service using specified subcommand.", "  serviceaccount      Create a service account with the specified name", "", "Options:", "      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.", "      --dry-run=false: If true, only print the object that would be sent, without sending it.", "      --edit=false: Edit the API resource before creating", "  -f, --filename=[]: Filename, directory, or URL to files to use to create the resource", "      --include-extended-apis=true: If true, include definitions of new APIs via calls to the API server. [default true]", "      --no-headers=false: When using the default or custom-column output format, don't print headers (default print headers).", "  -o, --output='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath].", "      --record=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists.", "  -R, --recursive=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.", "      --save-config=false: If true, the configuration of current object will be saved in its annotation. Otherwise, the annotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.", "      --schema-cache-dir='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '$HOME/.kube/schema'", "  -l, --selector='': Selector (label query) to filter on, supports '=', '==', and '!='.", "  -a, --show-all=false: When printing, show all resources (default hide terminated pods.)", "      --show-labels=false: When printing, show all labels as the last column (default hide labels column)", "      --sort-by='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string.", "      --template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].", "      --validate=true: If true, use a schema to validate the input before sending it", "      --windows-line-endings=false: Only relevant if --edit=true. Use Windows line-endings (default Unix line-endings)", "", "Usage:", "  kubectl create -f FILENAME [options]", "", "Use \"kubectl <command> --help\" for more information about a given command.", "Use \"kubectl options\" for a list of global command-line options (applies to all commands)."], "stdout": "", "stdout_lines": []}
failed: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com] (item=deployment.yml) => {"changed": true, "cmd": ["/usr/bin/kubectl", "--kubectl=/etc/kubernetes/admin.conf", "create", "-f", "/tmp/deployment.yml"], "delta": "0:00:00.140048", "end": "2017-09-03 17:21:41.059305", "failed": true, "item": "deployment.yml", "rc": 1, "start": "2017-09-03 17:21:40.919257", "stderr": "Error: unknown flag: --kubectl\n\n\nExamples:\n  # Create a pod using the data in pod.json.\n  kubectl create -f ./pod.json\n  \n  # Create a pod based on the JSON passed into stdin.\n  cat pod.json | kubectl create -f -\n  \n  # Edit the data in docker-registry.yaml in JSON using the v1 API format then create the resource using the edited data.\n  kubectl create -f docker-registry.yaml --edit --output-version=v1 -o json\n\nAvailable Commands:\n  clusterrole         Create a ClusterRole.\n  clusterrolebinding  Create a ClusterRoleBinding for a particular ClusterRole\n  configmap           Create a configmap from a local file, directory or literal value\n  deployment          Create a deployment with the specified name.\n  namespace           Create a namespace with the specified name\n  poddisruptionbudget Create a pod disruption budget with the specified name.\n  quota               Create a quota with the specified name.\n  role                Create a role with single rule.\n  rolebinding         Create a RoleBinding for a particular Role or ClusterRole\n  secret              Create a secret using specified subcommand\n  service             Create a service using specified subcommand.\n  serviceaccount      Create a service account with the specified name\n\nOptions:\n      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.\n      --dry-run=false: If true, only print the object that would be sent, without sending it.\n      --edit=false: Edit the API resource before creating\n  -f, --filename=[]: Filename, directory, or URL to files to use to create the resource\n      --include-extended-apis=true: If true, include definitions of new APIs via calls to the API server. [default true]\n      --no-headers=false: When using the default or custom-column output format, don't print headers (default print headers).\n  -o, --output='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath].\n      --record=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists.\n  -R, --recursive=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.\n      --save-config=false: If true, the configuration of current object will be saved in its annotation. Otherwise, the annotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.\n      --schema-cache-dir='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '$HOME/.kube/schema'\n  -l, --selector='': Selector (label query) to filter on, supports '=', '==', and '!='.\n  -a, --show-all=false: When printing, show all resources (default hide terminated pods.)\n      --show-labels=false: When printing, show all labels as the last column (default hide labels column)\n      --sort-by='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string.\n      --template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].\n      --validate=true: If true, use a schema to validate the input before sending it\n      --windows-line-endings=false: Only relevant if --edit=true. Use Windows line-endings (default Unix line-endings)\n\nUsage:\n  kubectl create -f FILENAME [options]\n\nUse \"kubectl <command> --help\" for more information about a given command.\nUse \"kubectl options\" for a list of global command-line options (applies to all commands).", "stderr_lines": ["Error: unknown flag: --kubectl", "", "", "Examples:", "  # Create a pod using the data in pod.json.", "  kubectl create -f ./pod.json", "  ", "  # Create a pod based on the JSON passed into stdin.", "  cat pod.json | kubectl create -f -", "  ", "  # Edit the data in docker-registry.yaml in JSON using the v1 API format then create the resource using the edited data.", "  kubectl create -f docker-registry.yaml --edit --output-version=v1 -o json", "", "Available Commands:", "  clusterrole         Create a ClusterRole.", "  clusterrolebinding  Create a ClusterRoleBinding for a particular ClusterRole", "  configmap           Create a configmap from a local file, directory or literal value", "  deployment          Create a deployment with the specified name.", "  namespace           Create a namespace with the specified name", "  poddisruptionbudget Create a pod disruption budget with the specified name.", "  quota               Create a quota with the specified name.", "  role                Create a role with single rule.", "  rolebinding         Create a RoleBinding for a particular Role or ClusterRole", "  secret              Create a secret using specified subcommand", "  service             Create a service using specified subcommand.", "  serviceaccount      Create a service account with the specified name", "", "Options:", "      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.", "      --dry-run=false: If true, only print the object that would be sent, without sending it.", "      --edit=false: Edit the API resource before creating", "  -f, --filename=[]: Filename, directory, or URL to files to use to create the resource", "      --include-extended-apis=true: If true, include definitions of new APIs via calls to the API server. [default true]", "      --no-headers=false: When using the default or custom-column output format, don't print headers (default print headers).", "  -o, --output='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath].", "      --record=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists.", "  -R, --recursive=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.", "      --save-config=false: If true, the configuration of current object will be saved in its annotation. Otherwise, the annotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.", "      --schema-cache-dir='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '$HOME/.kube/schema'", "  -l, --selector='': Selector (label query) to filter on, supports '=', '==', and '!='.", "  -a, --show-all=false: When printing, show all resources (default hide terminated pods.)", "      --show-labels=false: When printing, show all labels as the last column (default hide labels column)", "      --sort-by='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string.", "      --template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].", "      --validate=true: If true, use a schema to validate the input before sending it", "      --windows-line-endings=false: Only relevant if --edit=true. Use Windows line-endings (default Unix line-endings)", "", "Usage:", "  kubectl create -f FILENAME [options]", "", "Use \"kubectl <command> --help\" for more information about a given command.", "Use \"kubectl options\" for a list of global command-line options (applies to all commands)."], "stdout": "", "stdout_lines": []}
failed: [ec2-13-58-13-217.us-east-2.compute.amazonaws.com] (item=service.yml) => {"changed": true, "cmd": ["/usr/bin/kubectl", "--kubectl=/etc/kubernetes/admin.conf", "create", "-f", "/tmp/service.yml"], "delta": "0:00:00.146500", "end": "2017-09-03 17:21:42.193963", "failed": true, "item": "service.yml", "rc": 1, "start": "2017-09-03 17:21:42.047463", "stderr": "Error: unknown flag: --kubectl\n\n\nExamples:\n  # Create a pod using the data in pod.json.\n  kubectl create -f ./pod.json\n  \n  # Create a pod based on the JSON passed into stdin.\n  cat pod.json | kubectl create -f -\n  \n  # Edit the data in docker-registry.yaml in JSON using the v1 API format then create the resource using the edited data.\n  kubectl create -f docker-registry.yaml --edit --output-version=v1 -o json\n\nAvailable Commands:\n  clusterrole         Create a ClusterRole.\n  clusterrolebinding  Create a ClusterRoleBinding for a particular ClusterRole\n  configmap           Create a configmap from a local file, directory or literal value\n  deployment          Create a deployment with the specified name.\n  namespace           Create a namespace with the specified name\n  poddisruptionbudget Create a pod disruption budget with the specified name.\n  quota               Create a quota with the specified name.\n  role                Create a role with single rule.\n  rolebinding         Create a RoleBinding for a particular Role or ClusterRole\n  secret              Create a secret using specified subcommand\n  service             Create a service using specified subcommand.\n  serviceaccount      Create a service account with the specified name\n\nOptions:\n      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.\n      --dry-run=false: If true, only print the object that would be sent, without sending it.\n      --edit=false: Edit the API resource before creating\n  -f, --filename=[]: Filename, directory, or URL to files to use to create the resource\n      --include-extended-apis=true: If true, include definitions of new APIs via calls to the API server. [default true]\n      --no-headers=false: When using the default or custom-column output format, don't print headers (default print headers).\n  -o, --output='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath].\n      --record=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists.\n  -R, --recursive=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.\n      --save-config=false: If true, the configuration of current object will be saved in its annotation. Otherwise, the annotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.\n      --schema-cache-dir='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '$HOME/.kube/schema'\n  -l, --selector='': Selector (label query) to filter on, supports '=', '==', and '!='.\n  -a, --show-all=false: When printing, show all resources (default hide terminated pods.)\n      --show-labels=false: When printing, show all labels as the last column (default hide labels column)\n      --sort-by='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string.\n      --template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].\n      --validate=true: If true, use a schema to validate the input before sending it\n      --windows-line-endings=false: Only relevant if --edit=true. Use Windows line-endings (default Unix line-endings)\n\nUsage:\n  kubectl create -f FILENAME [options]\n\nUse \"kubectl <command> --help\" for more information about a given command.\nUse \"kubectl options\" for a list of global command-line options (applies to all commands).", "stderr_lines": ["Error: unknown flag: --kubectl", "", "", "Examples:", "  # Create a pod using the data in pod.json.", "  kubectl create -f ./pod.json", "  ", "  # Create a pod based on the JSON passed into stdin.", "  cat pod.json | kubectl create -f -", "  ", "  # Edit the data in docker-registry.yaml in JSON using the v1 API format then create the resource using the edited data.", "  kubectl create -f docker-registry.yaml --edit --output-version=v1 -o json", "", "Available Commands:", "  clusterrole         Create a ClusterRole.", "  clusterrolebinding  Create a ClusterRoleBinding for a particular ClusterRole", "  configmap           Create a configmap from a local file, directory or literal value", "  deployment          Create a deployment with the specified name.", "  namespace           Create a namespace with the specified name", "  poddisruptionbudget Create a pod disruption budget with the specified name.", "  quota               Create a quota with the specified name.", "  role                Create a role with single rule.", "  rolebinding         Create a RoleBinding for a particular Role or ClusterRole", "  secret              Create a secret using specified subcommand", "  service             Create a service using specified subcommand.", "  serviceaccount      Create a service account with the specified name", "", "Options:", "      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.", "      --dry-run=false: If true, only print the object that would be sent, without sending it.", "      --edit=false: Edit the API resource before creating", "  -f, --filename=[]: Filename, directory, or URL to files to use to create the resource", "      --include-extended-apis=true: If true, include definitions of new APIs via calls to the API server. [default true]", "      --no-headers=false: When using the default or custom-column output format, don't print headers (default print headers).", "  -o, --output='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath].", "      --record=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists.", "  -R, --recursive=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.", "      --save-config=false: If true, the configuration of current object will be saved in its annotation. Otherwise, the annotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.", "      --schema-cache-dir='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '$HOME/.kube/schema'", "  -l, --selector='': Selector (label query) to filter on, supports '=', '==', and '!='.", "  -a, --show-all=false: When printing, show all resources (default hide terminated pods.)", "      --show-labels=false: When printing, show all labels as the last column (default hide labels column)", "      --sort-by='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string.", "      --template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].", "      --validate=true: If true, use a schema to validate the input before sending it", "      --windows-line-endings=false: Only relevant if --edit=true. Use Windows line-endings (default Unix line-endings)", "", "Usage:", "  kubectl create -f FILENAME [options]", "", "Use \"kubectl <command> --help\" for more information about a given command.", "Use \"kubectl options\" for a list of global command-line options (applies to all commands)."], "stdout": "", "stdout_lines": []}
failed: [ec2-18-220-174-41.us-east-2.compute.amazonaws.com] (item=service.yml) => {"changed": true, "cmd": ["/usr/bin/kubectl", "--kubectl=/etc/kubernetes/admin.conf", "create", "-f", "/tmp/service.yml"], "delta": "0:00:00.134199", "end": "2017-09-03 17:21:42.204113", "failed": true, "item": "service.yml", "rc": 1, "start": "2017-09-03 17:21:42.069914", "stderr": "Error: unknown flag: --kubectl\n\n\nExamples:\n  # Create a pod using the data in pod.json.\n  kubectl create -f ./pod.json\n  \n  # Create a pod based on the JSON passed into stdin.\n  cat pod.json | kubectl create -f -\n  \n  # Edit the data in docker-registry.yaml in JSON using the v1 API format then create the resource using the edited data.\n  kubectl create -f docker-registry.yaml --edit --output-version=v1 -o json\n\nAvailable Commands:\n  clusterrole         Create a ClusterRole.\n  clusterrolebinding  Create a ClusterRoleBinding for a particular ClusterRole\n  configmap           Create a configmap from a local file, directory or literal value\n  deployment          Create a deployment with the specified name.\n  namespace           Create a namespace with the specified name\n  poddisruptionbudget Create a pod disruption budget with the specified name.\n  quota               Create a quota with the specified name.\n  role                Create a role with single rule.\n  rolebinding         Create a RoleBinding for a particular Role or ClusterRole\n  secret              Create a secret using specified subcommand\n  service             Create a service using specified subcommand.\n  serviceaccount      Create a service account with the specified name\n\nOptions:\n      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.\n      --dry-run=false: If true, only print the object that would be sent, without sending it.\n      --edit=false: Edit the API resource before creating\n  -f, --filename=[]: Filename, directory, or URL to files to use to create the resource\n      --include-extended-apis=true: If true, include definitions of new APIs via calls to the API server. [default true]\n      --no-headers=false: When using the default or custom-column output format, don't print headers (default print headers).\n  -o, --output='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath].\n      --record=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists.\n  -R, --recursive=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.\n      --save-config=false: If true, the configuration of current object will be saved in its annotation. Otherwise, the annotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.\n      --schema-cache-dir='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '$HOME/.kube/schema'\n  -l, --selector='': Selector (label query) to filter on, supports '=', '==', and '!='.\n  -a, --show-all=false: When printing, show all resources (default hide terminated pods.)\n      --show-labels=false: When printing, show all labels as the last column (default hide labels column)\n      --sort-by='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string.\n      --template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].\n      --validate=true: If true, use a schema to validate the input before sending it\n      --windows-line-endings=false: Only relevant if --edit=true. Use Windows line-endings (default Unix line-endings)\n\nUsage:\n  kubectl create -f FILENAME [options]\n\nUse \"kubectl <command> --help\" for more information about a given command.\nUse \"kubectl options\" for a list of global command-line options (applies to all commands).", "stderr_lines": ["Error: unknown flag: --kubectl", "", "", "Examples:", "  # Create a pod using the data in pod.json.", "  kubectl create -f ./pod.json", "  ", "  # Create a pod based on the JSON passed into stdin.", "  cat pod.json | kubectl create -f -", "  ", "  # Edit the data in docker-registry.yaml in JSON using the v1 API format then create the resource using the edited data.", "  kubectl create -f docker-registry.yaml --edit --output-version=v1 -o json", "", "Available Commands:", "  clusterrole         Create a ClusterRole.", "  clusterrolebinding  Create a ClusterRoleBinding for a particular ClusterRole", "  configmap           Create a configmap from a local file, directory or literal value", "  deployment          Create a deployment with the specified name.", "  namespace           Create a namespace with the specified name", "  poddisruptionbudget Create a pod disruption budget with the specified name.", "  quota               Create a quota with the specified name.", "  role                Create a role with single rule.", "  rolebinding         Create a RoleBinding for a particular Role or ClusterRole", "  secret              Create a secret using specified subcommand", "  service             Create a service using specified subcommand.", "  serviceaccount      Create a service account with the specified name", "", "Options:", "      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.", "      --dry-run=false: If true, only print the object that would be sent, without sending it.", "      --edit=false: Edit the API resource before creating", "  -f, --filename=[]: Filename, directory, or URL to files to use to create the resource", "      --include-extended-apis=true: If true, include definitions of new APIs via calls to the API server. [default true]", "      --no-headers=false: When using the default or custom-column output format, don't print headers (default print headers).", "  -o, --output='': Output format. One of: json|yaml|wide|name|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=... See custom columns [http://kubernetes.io/docs/user-guide/kubectl-overview/#custom-columns], golang template [http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template [http://kubernetes.io/docs/user-guide/jsonpath].", "      --record=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists.", "  -R, --recursive=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.", "      --save-config=false: If true, the configuration of current object will be saved in its annotation. Otherwise, the annotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.", "      --schema-cache-dir='~/.kube/schema': If non-empty, load/store cached API schemas in this directory, default is '$HOME/.kube/schema'", "  -l, --selector='': Selector (label query) to filter on, supports '=', '==', and '!='.", "  -a, --show-all=false: When printing, show all resources (default hide terminated pods.)", "      --show-labels=false: When printing, show all labels as the last column (default hide labels column)", "      --sort-by='': If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string.", "      --template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].", "      --validate=true: If true, use a schema to validate the input before sending it", "      --windows-line-endings=false: Only relevant if --edit=true. Use Windows line-endings (default Unix line-endings)", "", "Usage:", "  kubectl create -f FILENAME [options]", "", "Use \"kubectl <command> --help\" for more information about a given command.", "Use \"kubectl options\" for a list of global command-line options (applies to all commands)."], "stdout": "", "stdout_lines": []}
	to retry, use: --limit @/Users/hsutsungchun/ansible-kubeadm/site.retry

PLAY RECAP ************************************************************************************************************************************
ec2-13-58-13-217.us-east-2.compute.amazonaws.com : ok=20   changed=9    unreachable=0    failed=1   
ec2-18-220-174-41.us-east-2.compute.amazonaws.com : ok=15   changed=7    unreachable=0    failed=1   

